#ifndef MODULO_IMAGENS_PPM_H
#define MODULO_IMAGENS_PPM_H

#include "modulo_estruturas.h"

//###############################################################
// APlICAÇÃO - EDITOR DE IMAGEM PPM P6
// ANDRESSA ROCHA / LEIDIANE RODRIGUES - 06/08/2022
//###############################################################

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

//**************************************************************************
// IMAGEM - CRIAR MATRIZ
//**************************************************************************
void criarMatrizPixeis(pontImagem Imagem);

//**************************************************************************
// IMAGEM - LEITURA
//**************************************************************************
void lerImagem(pontImagem Imagem, FILE *imagem, char *nomeArquivo);

//**************************************************************************
// IMAGEM - SALVAR
//**************************************************************************
void salvarImagem(pontImagem Imagem, FILE *imagem, char *nomeArquivo);
void salvarImagemCores(pontImagem Imagem, FILE *imagem, char *nomeArquivo);


//**************************************************************************
// IMAGEM - GIRAR 90° -
//**************************************************************************
void rotacionar(pontImagem Imagem);

//**************************************************************************
// IMAGEM - AMPLIAR
//**************************************************************************
void ampliarImagem(pontImagem Imagem, int Aumento);

//**************************************************************************
// IMAGEM - ESPELHAR HORIZONTAL -FILTRO GRUPO
//**************************************************************************
void espelhar(pontImagem Imagem);

//**************************************************************************
// IMAGEM - REDUZIR
//**************************************************************************
void reduzir(pontImagem Imagem, int reducao);

//**************************************************************************
// IMAGEM - NEGATIVO
//**************************************************************************
void negativo(pontImagem Imagem);

//**************************************************************************
// IMAGEM - ESCALA CINZA
//**************************************************************************
void escalaCinza(pontImagem Imagem);

//**************************************************************************
// IMAGEM - REMOVER VERMELHO
//**************************************************************************
void removerCorVermelha(pontImagem Imagem);

//**************************************************************************
// IMAGEM - REMOVER VERDE
//**************************************************************************
void removerCorVerde(pontImagem Imagem);

//**************************************************************************
// IMAGEM - REMOVER AZUL
//**************************************************************************
void removerCorAzul(pontImagem Imagem);

//**************************************************************************
// IMAGEM - REMOVER VERMELHO/VERDE
//**************************************************************************
void removerCorVermelhoVerde(pontImagem Imagem);

//**************************************************************************
// IMAGEM - REMOVER VERMELHO/AZUL
//**************************************************************************
void removerCorVermelhoAzul(pontImagem Imagem);

//**************************************************************************
// IMAGEM - REMOVER VERDE/AZUL
//**************************************************************************
void removerCorVerdeAzul(pontImagem Imagem);

//**************************************************************************
// END
//**************************************************************************

#endif

